name: "VProfile IAC"
on: 
    push: 
        branches: 
            - main 
            - stage
        paths: 
            - terraform/**
    pull_request:
        branches: 
            - main
        paths: 
            - terraform/**
env:
    # Credential for AWS
    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

    # Bucket
    BUCKET_TF_STATE: ${{secrets.BUCKET_TF_STATE}}

    # AWS region
    AWS_REGION: us-east-1

    # eks cluster
    EKS_CLUSTER: vprofile-eks

jobs: 
    terraform: 
        name: "Apply terraform code changes"
        runs-on: ubuntu-latest
        defaults: 
            run: 
                shell: bash
                working-directory: ./terraform
        steps:
            - name: checkout source code 
              uses: actions/checkout@v4

            - name: install terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: "1.6.3"

            - name: terraform init
              id: init
              run: terraform init --backend-config="bucket=$BUCKET_TF_STATE"

            - name: terrform format
              id: fmt
              run: terraform fmt -check

            - name: terraform validate
              id: validate
              run: terraform validate

            - name: terraform plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true

            - name: terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: terraform apply 
              id: apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve -input=false -parallelism=1 planfile

            - name: Config AWS credential
              id: aws-config
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ${{env.AWS_REGION}}
                aws-access-key-id: ${{env.AWS_ACCESS_KEY_ID}}
                aws-secret-access-key: ${{env.AWS_SECRET_ACCESS_KEY}}

            - name: get kube config file 
              id: getconfig
              if: steps.apply.outcome == 'success'
              run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

            - name: Install Ingress controller
              if: steps.apply.outcome == 'success' && steps.getconfig.outcome == 'success'
              run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
